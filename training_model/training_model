{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8578365,"sourceType":"datasetVersion","datasetId":5116196}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/thuxinh/imdb-rating.58ccd4e6-b092-4603-92b8-7ccca4b4c556.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20250508/auto/storage/goog4_request&X-Goog-Date=20250508T140929Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=1f5e1dedeee7971583fecd05e71fb99413ccbf8cecac8ded28a9b97074b4e54d378e6b27b6bc8d1e3dacef4284693c42ee67edf8424b429b04962980183c39b5811433fd4f93f7335ee3f53a9a736f03276975342d500f1e8ad06676e568388ac6bd617da378fea36e0e72f31f32e686572635b65aad61923c84c068adb4e448c329bbe40dc831f38ade4adde07085ee96da0d2925af71c7ea88423630b356c168f79f5d8d6771ae236451e24b8d69defdcd775417024369f5b28b3a2e2e79e031612f7c6f670aa6e1a76462471aff62a7b8652ceccd8df90d38ebe91452448dab48a0c86d1f8556e62f0ac99a7ac1a0ee677f446025cac7d59e07015f530ca1","timestamp":1746721557526}]}},"nbformat_minor":0,"nbformat":4,"cells":[{"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"QxH6plXsOuRZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1746722525223,"user_tz":-420,"elapsed":22333,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}},"outputId":"3c0f37b8-cb2e-475b-e58d-50e24be1e713"},"cell_type":"code","outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"execution_count":1},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","dataset = pd.read_csv('/content/drive/MyDrive/DACN1/IMDb_Dataset_2.csv')\n","dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":327},"id":"AmarqHXixfWJ","executionInfo":{"status":"ok","timestamp":1746722804882,"user_tz":-420,"elapsed":138,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}},"outputId":"0455671e-5f1d-4511-a644-337e3c9e83da"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Title  IMDb Rating  Year Certificates        Genre  \\\n","0              End of the Spear          6.8  2005        PG-13    Adventure   \n","1                Elvira Madigan          7.0  1967           PG    Biography   \n","2  The Kid Stays in the Picture          7.3  2002            R  Documentary   \n","3                 It Ain't Over          8.2  2022           PG  Documentary   \n","4                        Mahler          7.0  1974           PG    Biography   \n","\n","           Director                                   Star Cast  MetaScore  \\\n","0         Jim Hanon         Louie LeonardoChad AllenJack Guzman       45.0   \n","1      Bo Widerberg  Pia DegermarkThommy BerggrenLennart Malmer       66.0   \n","2  Nanette Burstein          Robert EvansEddie AlbertPeter Bart       75.0   \n","3       Sean Mullin          Andy AndresRoger AngellMarty Appel       79.0   \n","4       Ken Russell      Robert PowellGeorgina HaleLee Montague       66.0   \n","\n","                                          Poster-src  Duration (minutes)  \n","0  https://m.media-amazon.com/images/M/MV5BMTYxOT...               108.0  \n","1  https://m.media-amazon.com/images/M/MV5BMmY2Nj...                91.0  \n","2  https://m.media-amazon.com/images/M/MV5BZjhiZm...                93.0  \n","3  https://m.media-amazon.com/images/M/MV5BZWViYW...                99.0  \n","4  https://m.media-amazon.com/images/M/MV5BYzY4Mz...               115.0  "],"text/html":["\n","  <div id=\"df-9210aeb3-4438-4aa0-a893-1a4aab9005be\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Title</th>\n","      <th>IMDb Rating</th>\n","      <th>Year</th>\n","      <th>Certificates</th>\n","      <th>Genre</th>\n","      <th>Director</th>\n","      <th>Star Cast</th>\n","      <th>MetaScore</th>\n","      <th>Poster-src</th>\n","      <th>Duration (minutes)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>End of the Spear</td>\n","      <td>6.8</td>\n","      <td>2005</td>\n","      <td>PG-13</td>\n","      <td>Adventure</td>\n","      <td>Jim Hanon</td>\n","      <td>Louie LeonardoChad AllenJack Guzman</td>\n","      <td>45.0</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BMTYxOT...</td>\n","      <td>108.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Elvira Madigan</td>\n","      <td>7.0</td>\n","      <td>1967</td>\n","      <td>PG</td>\n","      <td>Biography</td>\n","      <td>Bo Widerberg</td>\n","      <td>Pia DegermarkThommy BerggrenLennart Malmer</td>\n","      <td>66.0</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BMmY2Nj...</td>\n","      <td>91.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>The Kid Stays in the Picture</td>\n","      <td>7.3</td>\n","      <td>2002</td>\n","      <td>R</td>\n","      <td>Documentary</td>\n","      <td>Nanette Burstein</td>\n","      <td>Robert EvansEddie AlbertPeter Bart</td>\n","      <td>75.0</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BZjhiZm...</td>\n","      <td>93.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>It Ain't Over</td>\n","      <td>8.2</td>\n","      <td>2022</td>\n","      <td>PG</td>\n","      <td>Documentary</td>\n","      <td>Sean Mullin</td>\n","      <td>Andy AndresRoger AngellMarty Appel</td>\n","      <td>79.0</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BZWViYW...</td>\n","      <td>99.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mahler</td>\n","      <td>7.0</td>\n","      <td>1974</td>\n","      <td>PG</td>\n","      <td>Biography</td>\n","      <td>Ken Russell</td>\n","      <td>Robert PowellGeorgina HaleLee Montague</td>\n","      <td>66.0</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BYzY4Mz...</td>\n","      <td>115.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9210aeb3-4438-4aa0-a893-1a4aab9005be')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9210aeb3-4438-4aa0-a893-1a4aab9005be button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9210aeb3-4438-4aa0-a893-1a4aab9005be');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-0383bb87-f9bc-4377-8b90-a3250b422c17\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0383bb87-f9bc-4377-8b90-a3250b422c17')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-0383bb87-f9bc-4377-8b90-a3250b422c17 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataset","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 3173,\n  \"fields\": [\n    {\n      \"column\": \"Title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2739,\n        \"samples\": [\n          \"The Walk\",\n          \"Welcome to Marwen\",\n          \"The Place Where the Last Man Died\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IMDb Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8052022790214918,\n        \"min\": 3.9,\n        \"max\": 9.5,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          8.7,\n          5.3,\n          8.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 1917,\n        \"max\": 2025,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          1998,\n          1988,\n          1982\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"PG-13\",\n          \"PG\",\n          \"Approved\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"Adventure\",\n          \"Biography\",\n          \"Drama\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2089,\n        \"samples\": [\n          \"Matt Johnson\",\n          \"Theresa Labreglio\",\n          \"John Lee Hancock\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Star Cast\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2592,\n        \"samples\": [\n          \"John WooKhan ChanCheng Kuo\",\n          \"Jonathan PryceJames WilbyJonny Lee Miller\",\n          \"Lorne CameronDavid HoseltonWilliam Nicholson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MetaScore\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.358619498209181,\n        \"min\": 20.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 78,\n        \"samples\": [\n          92.0,\n          45.0,\n          72.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Poster-src\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2623,\n        \"samples\": [\n          \"https://m.media-amazon.com/images/M/MV5BODZiMzAxNTctZjdiZC00OGY5LTg2NDAtNWJhNmQwZTcyMWQ2XkEyXkFqcGdeQXVyMjUzOTY1NTc@._V1_QL75_UX190_CR0,0,190,281_.jpg\",\n          \"https://m.media-amazon.com/images/M/MV5BM2EzZTAzMDMtZmQzMS00OGRlLTllMTEtMzUzMmY1ZjQ0OTM4XkEyXkFqcGdeQXVyNTM3MDMyMDQ@._V1_QL75_UY281_CR11,0,190,281_.jpg\",\n          \"https://m.media-amazon.com/images/M/MV5BMzU5MjEwMTg2Nl5BMl5BanBnXkFtZTcwNzM3MTYxNA@@._V1_QL75_UY281_CR1,0,190,281_.jpg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration (minutes)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22.12303194219495,\n        \"min\": 46.0,\n        \"max\": 317.0,\n        \"num_unique_values\": 156,\n        \"samples\": [\n          197.0,\n          142.0,\n          219.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["def get_df_info(df):\n","    print(\"\\n\\033[1mKich thuoc cua DataFrame:\\033[0m \", df.shape)\n","    print(\"\\n\\033[1mDanh sach cac cot:\\033[0m \", df.columns.to_list())\n","    print(\"\\n\\033[1mKieu du lieu cua cac cot:\\033[0m\\n\", df.dtypes)\n","\n","    print(\"\\n\\033[1mThong tin chi tiet cua DataFrame:\\033[0m\")\n","    df.info()\n","\n","    print(\"\\n\\033[1mSo gia tri duy nhat trong moi cot:\\033[0m\")\n","    for col in df.columns:\n","        print(f\"\\033[1m{col}\\033[0m: {df[col].nunique()}\")\n","\n","    print(\"\\n\\033[1mSo gia tri bi thieu trong moi cot:\\033[0m\\n\", df.isnull().sum())\n","\n","    print(\"\\n\\033[1mSo dong trung lap:\\033[0m \", df.duplicated().sum())\n","\n","    print(\"\\n\\033[1mThong ke mo ta cua DataFrame:\\033[0m\\n\", df.describe().transpose())\n","\n","# Call the function\n","get_df_info(dataset)"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T05:45:03.722588Z","iopub.execute_input":"2024-07-02T05:45:03.722944Z","iopub.status.idle":"2024-07-02T05:45:03.75385Z","shell.execute_reply.started":"2024-07-02T05:45:03.722915Z","shell.execute_reply":"2024-07-02T05:45:03.752982Z"},"trusted":true,"id":"hw7L5Jd-OuRd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1746722909325,"user_tz":-420,"elapsed":62,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}},"outputId":"b8e47d06-d22b-4c12-8c34-8d9cff63339f"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\u001b[1mKich thuoc cua DataFrame:\u001b[0m  (3173, 10)\n","\n","\u001b[1mDanh sach cac cot:\u001b[0m  ['Title', 'IMDb Rating', 'Year', 'Certificates', 'Genre', 'Director', 'Star Cast', 'MetaScore', 'Poster-src', 'Duration (minutes)']\n","\n","\u001b[1mKieu du lieu cua cac cot:\u001b[0m\n"," Title                  object\n","IMDb Rating           float64\n","Year                    int64\n","Certificates           object\n","Genre                  object\n","Director               object\n","Star Cast              object\n","MetaScore             float64\n","Poster-src             object\n","Duration (minutes)    float64\n","dtype: object\n","\n","\u001b[1mThong tin chi tiet cua DataFrame:\u001b[0m\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3173 entries, 0 to 3172\n","Data columns (total 10 columns):\n"," #   Column              Non-Null Count  Dtype  \n","---  ------              --------------  -----  \n"," 0   Title               3173 non-null   object \n"," 1   IMDb Rating         3173 non-null   float64\n"," 2   Year                3173 non-null   int64  \n"," 3   Certificates        3173 non-null   object \n"," 4   Genre               3173 non-null   object \n"," 5   Director            3173 non-null   object \n"," 6   Star Cast           3173 non-null   object \n"," 7   MetaScore           3173 non-null   float64\n"," 8   Poster-src          3173 non-null   object \n"," 9   Duration (minutes)  3173 non-null   float64\n","dtypes: float64(3), int64(1), object(6)\n","memory usage: 248.0+ KB\n","\n","\u001b[1mSo gia tri duy nhat trong moi cot:\u001b[0m\n","\u001b[1mTitle\u001b[0m: 2739\n","\u001b[1mIMDb Rating\u001b[0m: 48\n","\u001b[1mYear\u001b[0m: 93\n","\u001b[1mCertificates\u001b[0m: 16\n","\u001b[1mGenre\u001b[0m: 17\n","\u001b[1mDirector\u001b[0m: 2089\n","\u001b[1mStar Cast\u001b[0m: 2592\n","\u001b[1mMetaScore\u001b[0m: 78\n","\u001b[1mPoster-src\u001b[0m: 2623\n","\u001b[1mDuration (minutes)\u001b[0m: 156\n","\n","\u001b[1mSo gia tri bi thieu trong moi cot:\u001b[0m\n"," Title                 0\n","IMDb Rating           0\n","Year                  0\n","Certificates          0\n","Genre                 0\n","Director              0\n","Star Cast             0\n","MetaScore             0\n","Poster-src            0\n","Duration (minutes)    0\n","dtype: int64\n","\n","\u001b[1mSo dong trung lap:\u001b[0m  411\n","\n","\u001b[1mThong ke mo ta cua DataFrame:\u001b[0m\n","                      count         mean        std     min     25%     50%  \\\n","IMDb Rating         3173.0     6.931012   0.805202     3.9     6.4     6.9   \n","Year                3173.0  2004.958399  16.819985  1917.0  1997.0  2010.0   \n","MetaScore           3173.0    65.993066  11.358619    20.0    64.0    66.0   \n","Duration (minutes)  3173.0   116.304822  22.123032    46.0   105.0   116.3   \n","\n","                       75%     max  \n","IMDb Rating            7.5     9.5  \n","Year                2017.0  2025.0  \n","MetaScore             69.0   100.0  \n","Duration (minutes)   122.0   317.0  \n"]}]},{"cell_type":"code","source":["X_num=dataset[['Year','MetaScore','Duration (minutes)']]\n","X_cat=dataset.drop(columns=['Title','IMDb Rating','Year','MetaScore','Duration (minutes)'])\n","y=dataset['IMDb Rating'].values\n","X_num.head()"],"metadata":{"trusted":true,"id":"w1AYnbSbOuRd","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1746722925913,"user_tz":-420,"elapsed":80,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}},"outputId":"b57cc4af-f15f-4380-ba76-ef9290f3c889"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year  MetaScore  Duration (minutes)\n","0  2005       45.0               108.0\n","1  1967       66.0                91.0\n","2  2002       75.0                93.0\n","3  2022       79.0                99.0\n","4  1974       66.0               115.0"],"text/html":["\n","  <div id=\"df-4354a153-237a-4c33-ae9f-99c49edde2c9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>MetaScore</th>\n","      <th>Duration (minutes)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2005</td>\n","      <td>45.0</td>\n","      <td>108.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1967</td>\n","      <td>66.0</td>\n","      <td>91.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2002</td>\n","      <td>75.0</td>\n","      <td>93.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2022</td>\n","      <td>79.0</td>\n","      <td>99.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1974</td>\n","      <td>66.0</td>\n","      <td>115.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4354a153-237a-4c33-ae9f-99c49edde2c9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4354a153-237a-4c33-ae9f-99c49edde2c9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4354a153-237a-4c33-ae9f-99c49edde2c9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ca0ecc47-1a64-4558-a32b-bec087b7a468\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ca0ecc47-1a64-4558-a32b-bec087b7a468')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ca0ecc47-1a64-4558-a32b-bec087b7a468 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_num","summary":"{\n  \"name\": \"X_num\",\n  \"rows\": 3173,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 1917,\n        \"max\": 2025,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          1998,\n          1988,\n          1982\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MetaScore\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.358619498209181,\n        \"min\": 20.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 78,\n        \"samples\": [\n          92.0,\n          45.0,\n          72.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration (minutes)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22.12303194219495,\n        \"min\": 46.0,\n        \"max\": 317.0,\n        \"num_unique_values\": 156,\n        \"samples\": [\n          197.0,\n          142.0,\n          219.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["X_cat.head()"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T05:52:57.83196Z","iopub.execute_input":"2024-07-02T05:52:57.832356Z","iopub.status.idle":"2024-07-02T05:52:57.843916Z","shell.execute_reply.started":"2024-07-02T05:52:57.832326Z","shell.execute_reply":"2024-07-02T05:52:57.842818Z"},"trusted":true,"id":"wIs42ACmOuRe","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1746722935328,"user_tz":-420,"elapsed":90,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}},"outputId":"dd58065d-e672-4128-8741-a89427bbb8f9"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Certificates        Genre          Director  \\\n","0        PG-13    Adventure         Jim Hanon   \n","1           PG    Biography      Bo Widerberg   \n","2            R  Documentary  Nanette Burstein   \n","3           PG  Documentary       Sean Mullin   \n","4           PG    Biography       Ken Russell   \n","\n","                                    Star Cast  \\\n","0         Louie LeonardoChad AllenJack Guzman   \n","1  Pia DegermarkThommy BerggrenLennart Malmer   \n","2          Robert EvansEddie AlbertPeter Bart   \n","3          Andy AndresRoger AngellMarty Appel   \n","4      Robert PowellGeorgina HaleLee Montague   \n","\n","                                          Poster-src  \n","0  https://m.media-amazon.com/images/M/MV5BMTYxOT...  \n","1  https://m.media-amazon.com/images/M/MV5BMmY2Nj...  \n","2  https://m.media-amazon.com/images/M/MV5BZjhiZm...  \n","3  https://m.media-amazon.com/images/M/MV5BZWViYW...  \n","4  https://m.media-amazon.com/images/M/MV5BYzY4Mz...  "],"text/html":["\n","  <div id=\"df-8d14afc2-d6da-474e-819a-1e2d8ce4f038\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Certificates</th>\n","      <th>Genre</th>\n","      <th>Director</th>\n","      <th>Star Cast</th>\n","      <th>Poster-src</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>PG-13</td>\n","      <td>Adventure</td>\n","      <td>Jim Hanon</td>\n","      <td>Louie LeonardoChad AllenJack Guzman</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BMTYxOT...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>PG</td>\n","      <td>Biography</td>\n","      <td>Bo Widerberg</td>\n","      <td>Pia DegermarkThommy BerggrenLennart Malmer</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BMmY2Nj...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>R</td>\n","      <td>Documentary</td>\n","      <td>Nanette Burstein</td>\n","      <td>Robert EvansEddie AlbertPeter Bart</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BZjhiZm...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>PG</td>\n","      <td>Documentary</td>\n","      <td>Sean Mullin</td>\n","      <td>Andy AndresRoger AngellMarty Appel</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BZWViYW...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>PG</td>\n","      <td>Biography</td>\n","      <td>Ken Russell</td>\n","      <td>Robert PowellGeorgina HaleLee Montague</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BYzY4Mz...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d14afc2-d6da-474e-819a-1e2d8ce4f038')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8d14afc2-d6da-474e-819a-1e2d8ce4f038 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8d14afc2-d6da-474e-819a-1e2d8ce4f038');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-2db47b66-ea57-43fb-99af-745d65f310d3\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2db47b66-ea57-43fb-99af-745d65f310d3')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-2db47b66-ea57-43fb-99af-745d65f310d3 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_cat","summary":"{\n  \"name\": \"X_cat\",\n  \"rows\": 3173,\n  \"fields\": [\n    {\n      \"column\": \"Certificates\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"PG-13\",\n          \"PG\",\n          \"Approved\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"Adventure\",\n          \"Biography\",\n          \"Drama\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2089,\n        \"samples\": [\n          \"Matt Johnson\",\n          \"Theresa Labreglio\",\n          \"John Lee Hancock\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Star Cast\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2592,\n        \"samples\": [\n          \"John WooKhan ChanCheng Kuo\",\n          \"Jonathan PryceJames WilbyJonny Lee Miller\",\n          \"Lorne CameronDavid HoseltonWilliam Nicholson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Poster-src\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2623,\n        \"samples\": [\n          \"https://m.media-amazon.com/images/M/MV5BODZiMzAxNTctZjdiZC00OGY5LTg2NDAtNWJhNmQwZTcyMWQ2XkEyXkFqcGdeQXVyMjUzOTY1NTc@._V1_QL75_UX190_CR0,0,190,281_.jpg\",\n          \"https://m.media-amazon.com/images/M/MV5BM2EzZTAzMDMtZmQzMS00OGRlLTllMTEtMzUzMmY1ZjQ0OTM4XkEyXkFqcGdeQXVyNTM3MDMyMDQ@._V1_QL75_UY281_CR11,0,190,281_.jpg\",\n          \"https://m.media-amazon.com/images/M/MV5BMzU5MjEwMTg2Nl5BMl5BanBnXkFtZTcwNzM3MTYxNA@@._V1_QL75_UY281_CR1,0,190,281_.jpg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","sc_X = StandardScaler()\n","X_train = sc_X.fit_transform(X_num)"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T05:54:57.616841Z","iopub.execute_input":"2024-07-02T05:54:57.617196Z","iopub.status.idle":"2024-07-02T05:54:57.624921Z","shell.execute_reply.started":"2024-07-02T05:54:57.617175Z","shell.execute_reply":"2024-07-02T05:54:57.623396Z"},"trusted":true,"id":"ZsrNJFYuOuRe","executionInfo":{"status":"ok","timestamp":1746722973930,"user_tz":-420,"elapsed":1014,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["X_cat = pd.get_dummies(X_cat, columns=['Certificates'], drop_first=True)\n","X_cat.head()\n"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T05:59:55.935827Z","iopub.execute_input":"2024-07-02T05:59:55.93627Z","iopub.status.idle":"2024-07-02T05:59:55.955549Z","shell.execute_reply.started":"2024-07-02T05:59:55.936241Z","shell.execute_reply":"2024-07-02T05:59:55.954342Z"},"trusted":true,"id":"cVkJdW7wOuRe","colab":{"base_uri":"https://localhost:8080/","height":399},"executionInfo":{"status":"ok","timestamp":1746722975554,"user_tz":-420,"elapsed":154,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}},"outputId":"80647a4e-c698-4d55-98e4-5279cd82fd89"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Genre          Director                                   Star Cast  \\\n","0    Adventure         Jim Hanon         Louie LeonardoChad AllenJack Guzman   \n","1    Biography      Bo Widerberg  Pia DegermarkThommy BerggrenLennart Malmer   \n","2  Documentary  Nanette Burstein          Robert EvansEddie AlbertPeter Bart   \n","3  Documentary       Sean Mullin          Andy AndresRoger AngellMarty Appel   \n","4    Biography       Ken Russell      Robert PowellGeorgina HaleLee Montague   \n","\n","                                          Poster-src  Certificates_G  \\\n","0  https://m.media-amazon.com/images/M/MV5BMTYxOT...           False   \n","1  https://m.media-amazon.com/images/M/MV5BMmY2Nj...           False   \n","2  https://m.media-amazon.com/images/M/MV5BZjhiZm...           False   \n","3  https://m.media-amazon.com/images/M/MV5BZWViYW...           False   \n","4  https://m.media-amazon.com/images/M/MV5BYzY4Mz...           False   \n","\n","   Certificates_M/PG  Certificates_NC-17  Certificates_Not Rated  \\\n","0              False               False                   False   \n","1              False               False                   False   \n","2              False               False                   False   \n","3              False               False                   False   \n","4              False               False                   False   \n","\n","   Certificates_PG  Certificates_PG-13  Certificates_Passed  Certificates_R  \\\n","0            False                True                False           False   \n","1             True               False                False           False   \n","2            False               False                False            True   \n","3             True               False                False           False   \n","4             True               False                False           False   \n","\n","   Certificates_TV-14  Certificates_TV-G  Certificates_TV-MA  \\\n","0               False              False               False   \n","1               False              False               False   \n","2               False              False               False   \n","3               False              False               False   \n","4               False              False               False   \n","\n","   Certificates_TV-PG  Certificates_TV-Y7  Certificates_Unrated  \\\n","0               False               False                 False   \n","1               False               False                 False   \n","2               False               False                 False   \n","3               False               False                 False   \n","4               False               False                 False   \n","\n","   Certificates_X  \n","0           False  \n","1           False  \n","2           False  \n","3           False  \n","4           False  "],"text/html":["\n","  <div id=\"df-da2f0b27-ae36-47f8-bcdc-797e07f90edb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Genre</th>\n","      <th>Director</th>\n","      <th>Star Cast</th>\n","      <th>Poster-src</th>\n","      <th>Certificates_G</th>\n","      <th>Certificates_M/PG</th>\n","      <th>Certificates_NC-17</th>\n","      <th>Certificates_Not Rated</th>\n","      <th>Certificates_PG</th>\n","      <th>Certificates_PG-13</th>\n","      <th>Certificates_Passed</th>\n","      <th>Certificates_R</th>\n","      <th>Certificates_TV-14</th>\n","      <th>Certificates_TV-G</th>\n","      <th>Certificates_TV-MA</th>\n","      <th>Certificates_TV-PG</th>\n","      <th>Certificates_TV-Y7</th>\n","      <th>Certificates_Unrated</th>\n","      <th>Certificates_X</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Adventure</td>\n","      <td>Jim Hanon</td>\n","      <td>Louie LeonardoChad AllenJack Guzman</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BMTYxOT...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Biography</td>\n","      <td>Bo Widerberg</td>\n","      <td>Pia DegermarkThommy BerggrenLennart Malmer</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BMmY2Nj...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Documentary</td>\n","      <td>Nanette Burstein</td>\n","      <td>Robert EvansEddie AlbertPeter Bart</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BZjhiZm...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Documentary</td>\n","      <td>Sean Mullin</td>\n","      <td>Andy AndresRoger AngellMarty Appel</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BZWViYW...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Biography</td>\n","      <td>Ken Russell</td>\n","      <td>Robert PowellGeorgina HaleLee Montague</td>\n","      <td>https://m.media-amazon.com/images/M/MV5BYzY4Mz...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da2f0b27-ae36-47f8-bcdc-797e07f90edb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-da2f0b27-ae36-47f8-bcdc-797e07f90edb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-da2f0b27-ae36-47f8-bcdc-797e07f90edb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-beb4e425-e578-4e5c-b4b0-26c02f20016f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-beb4e425-e578-4e5c-b4b0-26c02f20016f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-beb4e425-e578-4e5c-b4b0-26c02f20016f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_cat","summary":"{\n  \"name\": \"X_cat\",\n  \"rows\": 3173,\n  \"fields\": [\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"Adventure\",\n          \"Biography\",\n          \"Drama\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2089,\n        \"samples\": [\n          \"Matt Johnson\",\n          \"Theresa Labreglio\",\n          \"John Lee Hancock\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Star Cast\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2592,\n        \"samples\": [\n          \"John WooKhan ChanCheng Kuo\",\n          \"Jonathan PryceJames WilbyJonny Lee Miller\",\n          \"Lorne CameronDavid HoseltonWilliam Nicholson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Poster-src\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2623,\n        \"samples\": [\n          \"https://m.media-amazon.com/images/M/MV5BODZiMzAxNTctZjdiZC00OGY5LTg2NDAtNWJhNmQwZTcyMWQ2XkEyXkFqcGdeQXVyMjUzOTY1NTc@._V1_QL75_UX190_CR0,0,190,281_.jpg\",\n          \"https://m.media-amazon.com/images/M/MV5BM2EzZTAzMDMtZmQzMS00OGRlLTllMTEtMzUzMmY1ZjQ0OTM4XkEyXkFqcGdeQXVyNTM3MDMyMDQ@._V1_QL75_UY281_CR11,0,190,281_.jpg\",\n          \"https://m.media-amazon.com/images/M/MV5BMzU5MjEwMTg2Nl5BMl5BanBnXkFtZTcwNzM3MTYxNA@@._V1_QL75_UY281_CR1,0,190,281_.jpg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_G\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_M/PG\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_NC-17\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_Not Rated\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_PG\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_PG-13\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_Passed\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_R\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_TV-14\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_TV-G\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_TV-MA\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_TV-PG\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_TV-Y7\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_Unrated\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Certificates_X\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["X_cat.info()"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T06:01:01.863669Z","iopub.execute_input":"2024-07-02T06:01:01.864117Z","iopub.status.idle":"2024-07-02T06:01:01.876544Z","shell.execute_reply.started":"2024-07-02T06:01:01.864082Z","shell.execute_reply":"2024-07-02T06:01:01.875157Z"},"trusted":true,"id":"vSX9F_NIOuRf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1746722980449,"user_tz":-420,"elapsed":28,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}},"outputId":"ea4d5e83-1dd7-4497-ff47-d30f7a43e7d7"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3173 entries, 0 to 3172\n","Data columns (total 19 columns):\n"," #   Column                  Non-Null Count  Dtype \n","---  ------                  --------------  ----- \n"," 0   Genre                   3173 non-null   object\n"," 1   Director                3173 non-null   object\n"," 2   Star Cast               3173 non-null   object\n"," 3   Poster-src              3173 non-null   object\n"," 4   Certificates_G          3173 non-null   bool  \n"," 5   Certificates_M/PG       3173 non-null   bool  \n"," 6   Certificates_NC-17      3173 non-null   bool  \n"," 7   Certificates_Not Rated  3173 non-null   bool  \n"," 8   Certificates_PG         3173 non-null   bool  \n"," 9   Certificates_PG-13      3173 non-null   bool  \n"," 10  Certificates_Passed     3173 non-null   bool  \n"," 11  Certificates_R          3173 non-null   bool  \n"," 12  Certificates_TV-14      3173 non-null   bool  \n"," 13  Certificates_TV-G       3173 non-null   bool  \n"," 14  Certificates_TV-MA      3173 non-null   bool  \n"," 15  Certificates_TV-PG      3173 non-null   bool  \n"," 16  Certificates_TV-Y7      3173 non-null   bool  \n"," 17  Certificates_Unrated    3173 non-null   bool  \n"," 18  Certificates_X          3173 non-null   bool  \n","dtypes: bool(15), object(4)\n","memory usage: 145.8+ KB\n"]}]},{"cell_type":"code","source":["X_cat = pd.get_dummies(X_cat, columns=['Genre'], drop_first=True)\n","X_cat.info()"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T06:02:42.131853Z","iopub.execute_input":"2024-07-02T06:02:42.132183Z","iopub.status.idle":"2024-07-02T06:02:42.146536Z","shell.execute_reply.started":"2024-07-02T06:02:42.132161Z","shell.execute_reply":"2024-07-02T06:02:42.145325Z"},"trusted":true,"id":"GM8GilwPOuRf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1746722982904,"user_tz":-420,"elapsed":53,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}},"outputId":"b0e61054-f6aa-469c-e6ef-04fed7cd6815"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3173 entries, 0 to 3172\n","Data columns (total 34 columns):\n"," #   Column                  Non-Null Count  Dtype \n","---  ------                  --------------  ----- \n"," 0   Director                3173 non-null   object\n"," 1   Star Cast               3173 non-null   object\n"," 2   Poster-src              3173 non-null   object\n"," 3   Certificates_G          3173 non-null   bool  \n"," 4   Certificates_M/PG       3173 non-null   bool  \n"," 5   Certificates_NC-17      3173 non-null   bool  \n"," 6   Certificates_Not Rated  3173 non-null   bool  \n"," 7   Certificates_PG         3173 non-null   bool  \n"," 8   Certificates_PG-13      3173 non-null   bool  \n"," 9   Certificates_Passed     3173 non-null   bool  \n"," 10  Certificates_R          3173 non-null   bool  \n"," 11  Certificates_TV-14      3173 non-null   bool  \n"," 12  Certificates_TV-G       3173 non-null   bool  \n"," 13  Certificates_TV-MA      3173 non-null   bool  \n"," 14  Certificates_TV-PG      3173 non-null   bool  \n"," 15  Certificates_TV-Y7      3173 non-null   bool  \n"," 16  Certificates_Unrated    3173 non-null   bool  \n"," 17  Certificates_X          3173 non-null   bool  \n"," 18  Genre_Adventure         3173 non-null   bool  \n"," 19  Genre_Animation         3173 non-null   bool  \n"," 20  Genre_Biography         3173 non-null   bool  \n"," 21  Genre_Comedy            3173 non-null   bool  \n"," 22  Genre_Crime             3173 non-null   bool  \n"," 23  Genre_Documentary       3173 non-null   bool  \n"," 24  Genre_Drama             3173 non-null   bool  \n"," 25  Genre_Family            3173 non-null   bool  \n"," 26  Genre_Fantasy           3173 non-null   bool  \n"," 27  Genre_History           3173 non-null   bool  \n"," 28  Genre_Horror            3173 non-null   bool  \n"," 29  Genre_Musical           3173 non-null   bool  \n"," 30  Genre_Mystery           3173 non-null   bool  \n"," 31  Genre_Reality-TV        3173 non-null   bool  \n"," 32  Genre_Romance           3173 non-null   bool  \n"," 33  Genre_Sci-Fi            3173 non-null   bool  \n","dtypes: bool(31), object(3)\n","memory usage: 170.6+ KB\n"]}]},{"cell_type":"code","source":["X_cat = pd.get_dummies(X_cat, columns=['Director'], drop_first=True)\n","X_cat = pd.get_dummies(X_cat, columns=['Star Cast'], drop_first=True)"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T06:03:27.8659Z","iopub.execute_input":"2024-07-02T06:03:27.866221Z","iopub.status.idle":"2024-07-02T06:03:27.879089Z","shell.execute_reply.started":"2024-07-02T06:03:27.866199Z","shell.execute_reply":"2024-07-02T06:03:27.877691Z"},"trusted":true,"id":"-xlC8fkOOuRf","executionInfo":{"status":"ok","timestamp":1746722988502,"user_tz":-420,"elapsed":40,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["X_cat.info()"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T06:12:49.515246Z","iopub.execute_input":"2024-07-02T06:12:49.516221Z","iopub.status.idle":"2024-07-02T06:12:49.54093Z","shell.execute_reply.started":"2024-07-02T06:12:49.516187Z","shell.execute_reply":"2024-07-02T06:12:49.539671Z"},"trusted":true,"id":"XDXLhCIpOuRf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1746722992475,"user_tz":-420,"elapsed":121,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}},"outputId":"55921361-b19a-470a-bc90-436dc07c8b16"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3173 entries, 0 to 3172\n","Columns: 4711 entries, Poster-src to Star Cast_Íñigo Vallejo-NágeraTimothy J. Sexton\n","dtypes: bool(4710), object(1)\n","memory usage: 14.3+ MB\n"]}]},{"cell_type":"code","source":["X_cat = X_cat.drop(columns=['Poster-src']) # Drop the column containing the URL\n","X_cat=X_cat.astype(float)"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T06:07:30.503647Z","iopub.execute_input":"2024-07-02T06:07:30.504083Z","iopub.status.idle":"2024-07-02T06:07:30.511886Z","shell.execute_reply.started":"2024-07-02T06:07:30.504054Z","shell.execute_reply":"2024-07-02T06:07:30.510765Z"},"trusted":true,"id":"hGZarGmSOuRg","executionInfo":{"status":"ok","timestamp":1746723111101,"user_tz":-420,"elapsed":64,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["X = np.concatenate([X_num, X_cat],axis=1)"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T06:13:55.3877Z","iopub.execute_input":"2024-07-02T06:13:55.388161Z","iopub.status.idle":"2024-07-02T06:13:55.394816Z","shell.execute_reply.started":"2024-07-02T06:13:55.388128Z","shell.execute_reply":"2024-07-02T06:13:55.393807Z"},"trusted":true,"id":"gLXQPIaMOuRg","executionInfo":{"status":"ok","timestamp":1746723118995,"user_tz":-420,"elapsed":354,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test , y_train , y_test = train_test_split(X, y , test_size= 0.2, random_state=0)"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T06:14:02.106812Z","iopub.execute_input":"2024-07-02T06:14:02.107288Z","iopub.status.idle":"2024-07-02T06:14:02.213284Z","shell.execute_reply.started":"2024-07-02T06:14:02.107253Z","shell.execute_reply":"2024-07-02T06:14:02.211368Z"},"trusted":true,"id":"nPTe-QY-OuRg","executionInfo":{"status":"ok","timestamp":1746723129318,"user_tz":-420,"elapsed":506,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["print(X[:2,:])"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T06:14:26.414337Z","iopub.execute_input":"2024-07-02T06:14:26.414773Z","iopub.status.idle":"2024-07-02T06:14:26.428458Z","shell.execute_reply.started":"2024-07-02T06:14:26.414745Z","shell.execute_reply":"2024-07-02T06:14:26.427045Z"},"trusted":true,"id":"90xeghZaOuRg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1746723130897,"user_tz":-420,"elapsed":8,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}},"outputId":"c9bb7c2c-88d0-4698-a139-435a3def3711"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["[[2005.   45.  108. ...    0.    0.    0.]\n"," [1967.   66.   91. ...    0.    0.    0.]]\n"]}]},{"cell_type":"code","source":["# buildinf the ANN\n","import keras\n","from keras.models import Sequential\n","from keras.layers import Dense, Dropout, BatchNormalization\n","\n","\n","#khoi tao ANN\n","classifier = Sequential()\n","\n","# tao lop an thu nhat\n","classifier.add(Dense(units= 32, kernel_initializer = 'uniform', activation= 'relu', input_dim=X_train.shape[1]))\n","\n","\n","# them lop an thu hai\n","classifier.add(Dense(units= 64, kernel_initializer = 'uniform', activation= 'relu'))\n","\n","\n","# them lop an thu ba\n","classifier.add(Dense(units= 64, kernel_initializer = 'uniform', activation= 'relu'))\n","\n","# them lop dau ra\n","classifier.add(Dense(units= 1, kernel_initializer = 'uniform', activation= 'linear'))\n","\n","# bien dich mo hinh\n","classifier.compile(optimizer='adam', loss='mean_squared_error', metrics=['mae'])\n","\n","\n","classifier.fit(X_train,y_train,batch_size=10, epochs= 100,validation_split=0.15)\n","\n","# Luu mo hinh vao Google Drive\n","classifier.save('/content/drive/MyDrive/DACN1/imdbMovie_model.keras')\n","classifier.save('/content/drive/MyDrive/DACN1/imdbMovie_model.h5')"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T06:24:11.420285Z","iopub.execute_input":"2024-07-02T06:24:11.420688Z","iopub.status.idle":"2024-07-02T06:24:24.281141Z","shell.execute_reply.started":"2024-07-02T06:24:11.420661Z","shell.execute_reply":"2024-07-02T06:24:24.279906Z"},"trusted":true,"id":"Q1k08FrLOuRg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1746724638305,"user_tz":-420,"elapsed":140898,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}},"outputId":"5c26ab5e-b3b8-4820-a736-c8b2c6f01ebb"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 5ms/step - loss: 8.4065 - mae: 1.9501 - val_loss: 0.6886 - val_mae: 0.6644\n","Epoch 2/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 8ms/step - loss: 0.6508 - mae: 0.6378 - val_loss: 0.6904 - val_mae: 0.6708\n","Epoch 3/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step - loss: 0.6397 - mae: 0.6382 - val_loss: 0.6554 - val_mae: 0.6502\n","Epoch 4/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - loss: 0.6030 - mae: 0.6156 - val_loss: 0.6735 - val_mae: 0.6621\n","Epoch 5/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.5905 - mae: 0.6132 - val_loss: 0.9346 - val_mae: 0.7881\n","Epoch 6/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.6186 - mae: 0.6199 - val_loss: 0.6778 - val_mae: 0.6616\n","Epoch 7/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.5505 - mae: 0.5805 - val_loss: 0.6510 - val_mae: 0.6271\n","Epoch 8/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.5745 - mae: 0.5881 - val_loss: 0.5723 - val_mae: 0.5998\n","Epoch 9/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.5291 - mae: 0.5671 - val_loss: 0.5705 - val_mae: 0.5984\n","Epoch 10/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.4639 - mae: 0.5318 - val_loss: 0.6564 - val_mae: 0.6512\n","Epoch 11/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - loss: 0.4653 - mae: 0.5348 - val_loss: 0.5652 - val_mae: 0.5802\n","Epoch 12/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - loss: 0.5444 - mae: 0.5672 - val_loss: 0.5025 - val_mae: 0.5449\n","Epoch 13/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - loss: 0.4754 - mae: 0.5284 - val_loss: 0.6657 - val_mae: 0.6577\n","Epoch 14/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.4442 - mae: 0.5076 - val_loss: 0.4969 - val_mae: 0.5478\n","Epoch 15/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.4369 - mae: 0.5065 - val_loss: 0.6823 - val_mae: 0.6666\n","Epoch 16/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.4304 - mae: 0.4987 - val_loss: 0.4779 - val_mae: 0.5321\n","Epoch 17/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.3917 - mae: 0.4781 - val_loss: 0.4724 - val_mae: 0.5277\n","Epoch 18/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.4109 - mae: 0.4856 - val_loss: 0.4982 - val_mae: 0.5408\n","Epoch 19/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.4102 - mae: 0.4887 - val_loss: 0.5286 - val_mae: 0.5607\n","Epoch 20/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.3945 - mae: 0.4752 - val_loss: 0.4654 - val_mae: 0.5215\n","Epoch 21/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - loss: 0.4182 - mae: 0.4917 - val_loss: 0.4658 - val_mae: 0.5213\n","Epoch 22/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 5ms/step - loss: 0.3870 - mae: 0.4688 - val_loss: 0.4664 - val_mae: 0.5197\n","Epoch 23/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.3815 - mae: 0.4644 - val_loss: 0.4592 - val_mae: 0.5158\n","Epoch 24/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.3594 - mae: 0.4499 - val_loss: 0.4558 - val_mae: 0.5145\n","Epoch 25/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.3608 - mae: 0.4532 - val_loss: 0.4533 - val_mae: 0.5096\n","Epoch 26/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.3912 - mae: 0.4689 - val_loss: 0.4631 - val_mae: 0.5160\n","Epoch 27/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.3443 - mae: 0.4419 - val_loss: 0.4480 - val_mae: 0.5043\n","Epoch 28/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.3116 - mae: 0.4089 - val_loss: 0.4737 - val_mae: 0.5211\n","Epoch 29/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.3486 - mae: 0.4396 - val_loss: 0.5898 - val_mae: 0.6071\n","Epoch 30/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.3190 - mae: 0.4152 - val_loss: 0.4781 - val_mae: 0.5260\n","Epoch 31/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - loss: 0.3239 - mae: 0.4237 - val_loss: 0.4621 - val_mae: 0.5086\n","Epoch 32/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - loss: 0.2703 - mae: 0.3767 - val_loss: 0.7376 - val_mae: 0.6984\n","Epoch 33/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - loss: 0.2346 - mae: 0.3521 - val_loss: 0.5993 - val_mae: 0.6067\n","Epoch 34/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.2638 - mae: 0.3657 - val_loss: 0.4497 - val_mae: 0.5046\n","Epoch 35/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.2035 - mae: 0.3237 - val_loss: 0.4273 - val_mae: 0.4782\n","Epoch 36/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.2163 - mae: 0.3478 - val_loss: 0.4498 - val_mae: 0.4968\n","Epoch 37/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.1858 - mae: 0.3119 - val_loss: 0.4375 - val_mae: 0.4878\n","Epoch 38/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.1710 - mae: 0.2971 - val_loss: 0.5156 - val_mae: 0.5505\n","Epoch 39/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.1420 - mae: 0.2680 - val_loss: 0.4341 - val_mae: 0.4838\n","Epoch 40/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.1164 - mae: 0.2414 - val_loss: 0.5008 - val_mae: 0.5470\n","Epoch 41/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - loss: 0.1356 - mae: 0.2689 - val_loss: 0.4158 - val_mae: 0.4681\n","Epoch 42/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - loss: 0.1101 - mae: 0.2251 - val_loss: 0.5090 - val_mae: 0.5543\n","Epoch 43/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.1037 - mae: 0.2347 - val_loss: 0.4240 - val_mae: 0.4750\n","Epoch 44/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0914 - mae: 0.2148 - val_loss: 0.4967 - val_mae: 0.5454\n","Epoch 45/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0802 - mae: 0.2037 - val_loss: 0.4674 - val_mae: 0.5198\n","Epoch 46/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0904 - mae: 0.2231 - val_loss: 0.4539 - val_mae: 0.5024\n","Epoch 47/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.1066 - mae: 0.2510 - val_loss: 0.4169 - val_mae: 0.4662\n","Epoch 48/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0620 - mae: 0.1717 - val_loss: 0.4142 - val_mae: 0.4652\n","Epoch 49/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0828 - mae: 0.2138 - val_loss: 0.4096 - val_mae: 0.4586\n","Epoch 50/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0608 - mae: 0.1777 - val_loss: 0.4152 - val_mae: 0.4663\n","Epoch 51/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - loss: 0.0496 - mae: 0.1473 - val_loss: 0.4387 - val_mae: 0.4928\n","Epoch 52/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 6ms/step - loss: 0.0748 - mae: 0.1989 - val_loss: 0.4080 - val_mae: 0.4565\n","Epoch 53/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 5ms/step - loss: 0.0431 - mae: 0.1392 - val_loss: 0.5219 - val_mae: 0.5625\n","Epoch 54/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0707 - mae: 0.1980 - val_loss: 0.4065 - val_mae: 0.4549\n","Epoch 55/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0544 - mae: 0.1711 - val_loss: 0.4124 - val_mae: 0.4614\n","Epoch 56/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0492 - mae: 0.1540 - val_loss: 0.4070 - val_mae: 0.4562\n","Epoch 57/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0422 - mae: 0.1495 - val_loss: 0.4624 - val_mae: 0.5147\n","Epoch 58/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0516 - mae: 0.1755 - val_loss: 0.4278 - val_mae: 0.4837\n","Epoch 59/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0388 - mae: 0.1439 - val_loss: 0.4067 - val_mae: 0.4545\n","Epoch 60/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - loss: 0.0427 - mae: 0.1441 - val_loss: 0.4299 - val_mae: 0.4819\n","Epoch 61/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - loss: 0.0348 - mae: 0.1414 - val_loss: 0.4447 - val_mae: 0.4995\n","Epoch 62/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0382 - mae: 0.1436 - val_loss: 0.4067 - val_mae: 0.4530\n","Epoch 63/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0402 - mae: 0.1432 - val_loss: 0.4207 - val_mae: 0.4715\n","Epoch 64/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0446 - mae: 0.1502 - val_loss: 0.4045 - val_mae: 0.4506\n","Epoch 65/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0251 - mae: 0.0986 - val_loss: 0.4425 - val_mae: 0.4953\n","Epoch 66/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0229 - mae: 0.1034 - val_loss: 0.4050 - val_mae: 0.4518\n","Epoch 67/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0344 - mae: 0.1364 - val_loss: 0.4661 - val_mae: 0.5196\n","Epoch 68/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0342 - mae: 0.1348 - val_loss: 0.4107 - val_mae: 0.4616\n","Epoch 69/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0249 - mae: 0.1106 - val_loss: 0.4047 - val_mae: 0.4506\n","Epoch 70/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 6ms/step - loss: 0.0176 - mae: 0.0906 - val_loss: 0.4032 - val_mae: 0.4483\n","Epoch 71/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 7ms/step - loss: 0.0242 - mae: 0.1137 - val_loss: 0.4060 - val_mae: 0.4527\n","Epoch 72/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0239 - mae: 0.1085 - val_loss: 0.4286 - val_mae: 0.4849\n","Epoch 73/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0398 - mae: 0.1455 - val_loss: 0.4288 - val_mae: 0.4847\n","Epoch 74/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0255 - mae: 0.1137 - val_loss: 0.4140 - val_mae: 0.4647\n","Epoch 75/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0219 - mae: 0.1110 - val_loss: 0.4104 - val_mae: 0.4626\n","Epoch 76/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0333 - mae: 0.1323 - val_loss: 0.4055 - val_mae: 0.4530\n","Epoch 77/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0183 - mae: 0.0954 - val_loss: 0.4030 - val_mae: 0.4490\n","Epoch 78/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0302 - mae: 0.1307 - val_loss: 0.4267 - val_mae: 0.4836\n","Epoch 79/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0220 - mae: 0.1032 - val_loss: 0.4383 - val_mae: 0.4981\n","Epoch 80/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0322 - mae: 0.1300 - val_loss: 0.4116 - val_mae: 0.4647\n","Epoch 81/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - loss: 0.0318 - mae: 0.1303 - val_loss: 0.4058 - val_mae: 0.4524\n","Epoch 82/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 6ms/step - loss: 0.0192 - mae: 0.0995 - val_loss: 0.4179 - val_mae: 0.4737\n","Epoch 83/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0175 - mae: 0.0909 - val_loss: 0.4018 - val_mae: 0.4473\n","Epoch 84/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0210 - mae: 0.1006 - val_loss: 0.4236 - val_mae: 0.4762\n","Epoch 85/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0186 - mae: 0.1004 - val_loss: 0.4405 - val_mae: 0.4943\n","Epoch 86/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0198 - mae: 0.1036 - val_loss: 0.4053 - val_mae: 0.4547\n","Epoch 87/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0217 - mae: 0.1089 - val_loss: 0.4227 - val_mae: 0.4791\n","Epoch 88/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0168 - mae: 0.0924 - val_loss: 0.4146 - val_mae: 0.4695\n","Epoch 89/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0201 - mae: 0.0975 - val_loss: 0.4284 - val_mae: 0.4864\n","Epoch 90/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0205 - mae: 0.0983 - val_loss: 0.4089 - val_mae: 0.4600\n","Epoch 91/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 6ms/step - loss: 0.0193 - mae: 0.1019 - val_loss: 0.4041 - val_mae: 0.4483\n","Epoch 92/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 7ms/step - loss: 0.0183 - mae: 0.0921 - val_loss: 0.4045 - val_mae: 0.4528\n","Epoch 93/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 5ms/step - loss: 0.0168 - mae: 0.0973 - val_loss: 0.4011 - val_mae: 0.4474\n","Epoch 94/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0121 - mae: 0.0765 - val_loss: 0.4190 - val_mae: 0.4696\n","Epoch 95/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0195 - mae: 0.1056 - val_loss: 0.4185 - val_mae: 0.4730\n","Epoch 96/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0173 - mae: 0.0969 - val_loss: 0.4392 - val_mae: 0.4981\n","Epoch 97/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0175 - mae: 0.0940 - val_loss: 0.4230 - val_mae: 0.4791\n","Epoch 98/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - loss: 0.0293 - mae: 0.1180 - val_loss: 0.4046 - val_mae: 0.4536\n","Epoch 99/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - loss: 0.0208 - mae: 0.1046 - val_loss: 0.5877 - val_mae: 0.6102\n","Epoch 100/100\n","\u001b[1m216/216\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 8ms/step - loss: 0.0285 - mae: 0.1272 - val_loss: 0.4023 - val_mae: 0.4481\n"]},{"output_type":"stream","name":"stderr","text":["WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"]}]},{"cell_type":"code","source":["y_pred=classifier.predict(X_test)\n","\n","\n","\n","plt.scatter(y_test, y_pred)\n","plt.xlabel('Actual Values')\n","plt.ylabel('Predicted Values')\n","plt.title('Actual vs Predicted Plot')\n","plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red', linestyle='--')\n","plt.show()"],"metadata":{"execution":{"iopub.status.busy":"2024-07-02T06:29:04.817697Z","iopub.execute_input":"2024-07-02T06:29:04.818012Z","iopub.status.idle":"2024-07-02T06:29:05.094963Z","shell.execute_reply.started":"2024-07-02T06:29:04.81799Z","shell.execute_reply":"2024-07-02T06:29:05.09402Z"},"trusted":true,"id":"lUHU2h-qOuRg","colab":{"base_uri":"https://localhost:8080/","height":489},"executionInfo":{"status":"ok","timestamp":1746724798113,"user_tz":-420,"elapsed":1064,"user":{"displayName":"NGUYỄN ANH THƯ","userId":"07557030385885415382"}},"outputId":"8fcdc396-4a7c-4796-d899-c9dc630f65b4"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}